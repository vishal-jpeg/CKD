# 1️⃣ Connect to Microsoft Graph with required permissions
Connect-MgGraph -Scopes "RoleManagement.ReadWrite.Directory", "RoleManagementPolicy.ReadWrite.AzureAD"

# 2️⃣ Get the Policy Assignment for the Reader role in the Sandbox subscription
$PolicyAssignment = Get-MgPolicyRoleManagementPolicyAssignment -Filter "scopeId eq '/subscriptions/<YOUR_SANDBOX_SUBSCRIPTION_ID>' and scopeType eq 'Subscription' and RoleDefinitionId eq 'acdd72a7-3385-48ef-bd42-f606fba81ae7'"  # Reader Role ID

if (-not $PolicyAssignment) { 
    Write-Host "❌ Error: Policy Assignment not found for Reader role in Sandbox subscription!" 
    exit 1
}

Write-Host "✅ Found Policy Assignment with ID: $($PolicyAssignment.PolicyId)"

# 3️⃣ Retrieve the policy rule for expiration settings
$Policy = Get-MgPolicyRoleManagementPolicyRule -UnifiedRoleManagementPolicyId $PolicyAssignment.PolicyId | Where-Object { $_.Id -like "*Expiration*" }

if (-not $Policy) { 
    Write-Host "❌ Error: Expiration Policy Rule not found for Reader role!" 
    exit 1
}

Write-Host "✅ Found Expiration Policy Rule: $($Policy.Id)"

# 4️⃣ Update the policy rule to disable expiration
$params = @{
    "@odata.type" = "#microsoft.graph.unifiedRoleManagementPolicyExpirationRule"
    id = $Policy.Id
    isExpirationRequired = $false   # No expiration
    maximumDuration = "P0D"         # Permanent eligibility
}

Update-MgPolicyRoleManagementPolicyRule -UnifiedRoleManagementPolicyId $PolicyAssignment.PolicyId -UnifiedRoleManagementPolicyRuleId $Policy.Id -BodyParameter $params

Write-Host "✅ Reader Role in Sandbox Subscription now has PERMANENT eligibility!"
