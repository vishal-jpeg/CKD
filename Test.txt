# ========== CONFIG ==========
$clientId     = "<YOUR-CLIENT-ID>"
$tenantId     = "<YOUR-TENANT-ID>"
$clientSecret = "<YOUR-CLIENT-SECRET>"
$organization = "<YOUR-AZDO-ORG-NAME>"         # e.g., 'contoso'
$userId       = "<ENTRA-ID-USER-ID>"           # Object ID or descriptor of the target user
$scopes       = "vso.code vso.build"           # Customize based on what the PAT needs

# ========== Acquire Access Token ==========
$tokenEndpoint = "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token"
$tokenBody = @{
    grant_type    = "client_credentials"
    client_id     = $clientId
    client_secret = $clientSecret
    scope         = "499b84ac-1321-427f-aa17-267ca6975798/.default"
}

$tokenResponse = Invoke-RestMethod -Method Post -Uri $tokenEndpoint -Body $tokenBody
$accessToken = $tokenResponse.access_token

Write-Output "✅ Access token acquired."

# ========== Prepare PAT Request Body ==========
$patRequestBody = @{
    displayName = "automation-pat-$(Get-Date -Format 'yyyyMMdd-HHmm')"
    scope       = $scopes
    validTo     = (Get-Date).AddDays(30).ToString("o")
    targetAccounts = @("$userId")  # Required field for PAT creation
} | ConvertTo-Json -Depth 10

# ========== Call PAT Creation API ==========
$headers = @{
    Authorization = "Bearer $accessToken"
    "Content-Type" = "application/json"
}

$uri = "https://vssps.dev.azure.com/$organization/_apis/tokens/pats?api-version=7.1-preview.1"

$response = Invoke-RestMethod -Method Post -Uri $uri -Headers $headers -Body $patRequestBody

# ========== Output the PAT ==========
$newPAT = $response.patToken
Write-Output "✅ New PAT created: $newPAT"
