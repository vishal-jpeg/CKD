# ... (keep the initial part up to getting $policyId the same)

      # Get the FULL existing policy details (this was missing before)
      $getPolicyUri = "https://management.azure.com/subscriptions/$($subscription.Id)/providers/Microsoft.Authorization/roleManagementPolicies/$policyId?api-version=2020-10-01"
      $fullPolicy = Invoke-RestMethod -Method GET -Uri $getPolicyUri -Headers $headers

      # Modify the expiration rule in the existing rules array
      foreach ($rule in $fullPolicy.properties.rules) {
          if ($rule.id -eq "Expiration_Admin_Assignment") {
              $rule.isExpirationRequired = $false
              $rule.maximumDuration = "P999D"  # Set to a large value
              break
          }
      }

      # Build the CORRECTED JSON payload with all rules
      $patchBody = @{
          properties = @{
              displayName = "Permanent Reader Role Policy"
              rules = $fullPolicy.properties.rules  # Include modified rules
          }
      } | ConvertTo-Json -Depth 10
      Write-Host "PATCH Payload: $patchBody"
      
      # Execute the PATCH request with full policy rules
      $patchResponse = Invoke-RestMethod -Method PATCH -Uri $patchUri -Headers $headers -Body $patchBody
