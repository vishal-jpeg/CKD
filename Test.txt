param (
    [string]$Organization = "yourOrgName",  # e.g. cantirebank
    [string]$KeyVaultName = "yourKeyVaultName",  # e.g. ctb-ac-sb-co-kv-pat-01
    [string]$SecretName = "AutomationPAT-token", # Name of the secret in Key Vault
    [string]$Username,  # Azure DevOps username (e.g. user@domain.com)
    [string]$Password   # Azure DevOps password
)

# Construct basic auth header
$basicAuth = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("${Username}:${Password}"))
$headers = @{
    Authorization = "Basic $basicAuth"
    "Content-Type" = "application/json"
}

# Verify credentials by calling Profile API
try {
    Write-Output "Verifying credentials..."
    $verifyResponse = Invoke-RestMethod -Uri "https://app.vssps.visualstudio.com/_apis/profile/profiles/me?api-version=7.1-preview.1" `
        -Headers $headers -Method Get

    Write-Output "✅ Credentials verified for user: $($verifyResponse.displayName) <$($verifyResponse.emailAddress)>"
}
catch {
    Write-Error "❌ Credential verification failed: $($_.Exception.Message)"
    throw "Invalid credentials. Please verify username and password."
}

# Prepare new PAT creation request body
$body = @{
    displayName = "Auto-Rotated-PAT"
    scope       = "vso.code vso.build"
    validTo     = (Get-Date).AddDays(30).ToString("o")
    allOrgs     = $false
} | ConvertTo-Json -Depth 10

# Call Azure DevOps API to create new PAT
Write-Output "Creating new PAT..."
$response = Invoke-RestMethod -Uri "https://vssps.dev.azure.com/$Organization/_apis/tokens/pats?api-version=7.1-preview.1" `
    -Method Post -Headers $headers -Body $body

$newPAT = $response.patToken

if (-not $newPAT) {
    throw "Failed to retrieve new PAT. Response: $($response | ConvertTo-Json -Depth 5)"
}

# Authenticate to Azure (Managed Identity or login) to update Key Vault secret
Write-Output "Authenticating to Azure to update Key Vault secret..."
Connect-AzAccount -Identity

# Store new PAT in Azure Key Vault
Write-Output "Storing new PAT in Key Vault: $KeyVaultName secret name: $SecretName"
Set-AzKeyVaultSecret -VaultName $KeyVaultName -Name $SecretName -SecretValue (ConvertTo-SecureString $newPAT -AsPlainText -Force)

Write-Output "✅ PAT rotation completed successfully."
