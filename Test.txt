param (
    [string]$Username = "YourUser@domain.com",
    [string]$Password = "YourPassword",
    [string]$Organization = "yourorg",  # NOT the full URL
    [string]$KeyVaultName = "your-kv-name",
    [string]$SecretName = "AutomationPAT-token"
)

# Convert username and password to base64 basic auth string
$authString = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$Username:$Password"))
$headers = @{
    Authorization = "Basic $authString"
    "Content-Type" = "application/json"
}

# Prepare new PAT body
$body = @{
    displayName = "Auto-Rotated-PAT"
    scope       = "vso.code vso.build vso.tokens"
    validTo     = (Get-Date).AddDays(30).ToString("o")
    allOrgs     = $false
} | ConvertTo-Json -Depth 10

# Call the Azure DevOps PAT Lifecycle API
$uri = "https://vssps.dev.azure.com/$Organization/_apis/tokens/pats?api-version=7.1-preview.1"
$response = Invoke-RestMethod -Uri $uri -Method Post -Headers $headers -Body $body

$newPAT = $response.patToken

if (-not $newPAT) {
    throw "PAT creation failed: $($response | ConvertTo-Json -Depth 5)"
}

# Login to Azure with Managed Identity to store in Key Vault
Connect-AzAccount -Identity

# Store new PAT
Set-AzKeyVaultSecret -VaultName $KeyVaultName -Name $SecretName -SecretValue (ConvertTo-SecureString $newPAT -AsPlainText -Force)

Write-Output "âœ… PAT rotation successful and stored in Key Vault"
