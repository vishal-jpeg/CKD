trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:
- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'MyAzureServiceConnection'
    ScriptType: 'InlineScript'
    Inline: |
      # Define the Get-Headers function
      Function Get-Headers {
          Param (
              [Parameter(Mandatory)]
              [Array]$Context
          )
          $azProfile = [Microsoft.Azure.Commands.Common.Authentication.Abstractions.AzureRmProfileProvider]::Instance.Profile
          $profileClient = New-Object -TypeName Microsoft.Azure.Commands.ResourceManager.Common.RMProfileClient -ArgumentList ($azProfile)
          $token = $profileClient.AcquireAccessToken($Context.Subscription.TenantId)
          $authHeader = @{
              'Content-Type'  = 'application/json'
              'Authorization' = 'Bearer ' + $token.AccessToken
          }
          return $authHeader
      }

      # Ensure you're authenticated. The AzurePowerShell task uses the service connection, so you should already be logged in.
      $context = Get-AzContext
      if (-not $context) {
          Write-Error "No Azure context found. Ensure you're logged in."
          exit 1
      }

      # Retrieve headers using the custom Get-Headers function.
      $headers = Get-Headers -Context (Get-AzContext)

      # Retrieve the current subscription.
      # Replace "MySubscription" with your subscription name, or use Get-AzSubscription to pick the desired subscription.
      $subscription = Get-AzSubscription -SubscriptionName "MySubscription"
      if (-not $subscription) {
          Write-Error "Subscription not found."
          exit 1
      }
      Write-Host "Subscription Id: $($subscription.Id)"

      # Set the contributor role definition id.
      # The GUID below is the built-in Contributor role id.
      $contributorRoleId = "b24988ac-6180-42a0-ab88-20f7382dd24c"

      # Build the GET request URI using the subscription id and contributor role id.
      $getRolePolicyUri = "https://management.azure.com/providers/Microsoft.Subscription/subscriptions/{0}/providers/Microsoft.Authorization/roleManagementPolicies?api-version=2020-10-01&`$filter=roleDefinitionId%20eq%20'subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}'" -f $subscription.Id, $contributorRoleId
      Write-Host "GET Role Policy URI: $getRolePolicyUri"

      # Get the role policy using the REST API.
      $rolePolicy = (Invoke-RestMethod -Uri $getRolePolicyUri -Method Get -Headers $headers).value

      Write-Host "Role Policy:"
      $rolePolicy
  azurePowerShellVersion: 'LatestVersion'
