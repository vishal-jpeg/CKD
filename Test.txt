âœ… Yes, that is absolutely possible.
You can make your Azure DevOps pipeline prompt users at runtime with a dropdown (or multi-select list) of available RCGs, and then deploy only the selected RCG(s).


---

âœ… High-Level Approach:

You need to implement runtime pipeline parameters in Azure DevOps YAML like this:


---

âœ… Step 1: Define Pipeline Parameters (Dropdown for RCG selection)

Example in your Azure DevOps pipeline YAML:

parameters:
  - name: RCGtoDeploy
    displayName: 'Select Rule Collection Group to Deploy'
    type: string
    default: 'All'
    values:
      - All
      - rcgsbdefault01
      - rcgsbdefault02


---

âœ… Step 2: Pass Selected RCG to Your Deployment Script

In your pipeline task (ex: Azure CLI or PowerShell), pass this parameter down.

For example, in Azure CLI task:

- task: AzureCLI@2
  inputs:
    azureSubscription: 'YourServiceConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az deployment sub create \
        --location 'eastus' \
        --template-file 'main.bicep' \
        --parameters RCGName=${{ parameters.RCGtoDeploy }}


---

âœ… Step 3: Add Filtering Logic in Your Bicep File (Filter based on selected RCG)

Inside your main.bicep, add a new parameter:

@allowed([
  'All'
  'rcgsbdefault01'
  'rcgsbdefault02'
])
param RCGName string = 'All'

Then, before your module loop, filter the RCGs like this:

var selectedRCGs = RCGName == 'All' ? firewallPoliciesDeploy : [
  for rcg in firewallPoliciesDeploy: if (RCGName == rcg.ruleCollectionGroups[0].name) {
    rcg
  }
]

Then update your loop to deploy only selected ones:

module firewallPolicyRuleCollectionGroups 'Module/RCG/rcg.bicep' = [
  for rulecollectionGroup in selectedRCGs: {
    name: 'ruleCollectionGroup-${uniqueString(rulecollectionGroup.existingFirewallPolicyName, rulecollectionGroup.ruleCollectionGroups[0].name)}'
    dependsOn: [
      firewallPolicyParent
    ]
    params: {
      ruleCollectionGroup: {
        existingFirewallPolicyName: rulecollectionGroup.existingFirewallPolicyName
        ruleCollectionGroups: rulecollectionGroup.ruleCollectionGroups
        rgName: rulecollectionGroup.rgName
        subscriptionId: rulecollectionGroup.subscriptionId
      }
    }
  }
]


---

âœ… âœ… Summary:

Task	Action

Pipeline UI	Add a runtime dropdown parameter for RCG selection
YAML	Pass the selected RCG as a Bicep parameter
Bicep	Filter your RCG array based on selected input
Deployment	Deploy only selected RCG(s)



---

âœ… âœ… Optional Extension (Multi-select Support ðŸš©):

If you want to allow multi-select (multiple RCGs at once), youâ€™ll have to:

1. Change parameter type to object or array in both pipeline and Bicep


2. Loop through selected values inside Bicep


3. Filter based on membership (contains() or array match)



If you want, I can help with that version too.


---

ðŸ‘‰ Want me to give you the exact YAML + Bicep snippets for multi-select case?

