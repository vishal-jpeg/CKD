targetScope = 'subscription'

// Imports
import { fwDeploy } from 'Module/importbicep.bicep'
import { rcgMap } from 'Module/RCG/rcg-import.bicep'

// Parameters
param Resource string = ''
param RuleCollectionGroupName string = ''
param firewallPolicyName string = ''
param selectedRCGs array = []

// Variables
var firewallDeploy = fwDeploy
var selectedRCGConfigs = [for rcgKey in selectedRCGs : rcgMap[rcgKey]]

// Firewall Policy Deployment
module firewallPolicy 'br/modules:network/firewall-policy:0.2' = if (Resource == 'Firewall Policy') {
  // ... existing firewall params ...
}

// Corrected RCG Deployment
module rcgDeployment 'br/modules:network/firewall-policy/rule-collection-group:0.1' = 
  [for rcgConfig in selectedRCGConfigs: if (Resource == 'Rule Collection Group' || Resource == 'Firewall Policy') {
    scope: resourceGroup(rcgConfig.existingSubscriptionId, rcgConfig.existingResourceGroupName)
    name: 'rcg-${uniqueString(rcgConfig.existingFirewallPolicyName, rcgConfig.ruleCollectionGroups[0].name)}'
    params: {
      ruleCollectionGroup: {
        existingFirewallPolicyName: rcgConfig.existingFirewallPolicyName
        existingResourceGroupName: rcgConfig.existingResourceGroupName
        existingSubscriptionId: rcgConfig.existingSubscriptionId
        properties: {
          ruleCollectionGroups: rcgConfig.ruleCollectionGroups
        }
      }
    }
}]
