# ------------------------
# CONFIGURATION SECTION
# ------------------------

$org = "https://dev.azure.com/cantirebank/"
$namespaceId = "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87"
$projectId = $ProjectDetails.id
$repoId = $repold
$token = "repoV2/$projectId/$repoId"
$subject = $groupDescriptor  # e.g., vssgp.xxx

# Permissions to audit
$permissionsToCheck = @(
    "Advanced Security: manage and dismiss alerts",
    "Advanced Security: manage settings",
    "Advanced Security: view alerts",
    "Read"
)

# ------------------------
# STEP 1: Get direct permissions of the subject
# ------------------------

Write-Host "üîç Fetching direct permissions for subject: $subject"
$jsonText = az devops security permission show `
    --namespace-id  $namespaceId `
    --subject       $subject `
    --token         $token `
    --organization  $org `
    --output        json

$directPermissions = $jsonText | ConvertFrom-Json

# ------------------------
# STEP 2: Get group memberships of the subject
# ------------------------

Write-Host "üîó Fetching group memberships for subject: $subject"
$membershipJson = az devops security group membership list `
    --id $subject `
    --organization $org `
    --output json

$groupMemberships = ($membershipJson | ConvertFrom-Json).members

# ------------------------
# STEP 3: Fetch permissions of each parent group
# ------------------------

$inheritedPermissions = @{}

foreach ($group in $groupMemberships) {
    Write-Host "üîÑ Checking inherited permissions for group: $group"

    $permJson = az devops security permission show `
        --namespace-id $namespaceId `
        --subject $group `
        --token $token `
        --organization $org `
        --output json

    $permList = $permJson | ConvertFrom-Json

    foreach ($perm in $permList) {
        if ($perm.allow -gt 0) {
            if (-not $inheritedPermissions.ContainsKey($perm.permissionDisplayName)) {
                $inheritedPermissions[$perm.permissionDisplayName] = $group
            }
        }
    }
}

# ------------------------
# STEP 4: Final audit (direct + inherited)
# ------------------------

foreach ($permName in $permissionsToCheck) {
    Write-Host "`nüîé Auditing permission: $permName"

    $match = $directPermissions | Where-Object { $_.permissionDisplayName -eq $permName }

    if ($match) {
        if ($match.allow -gt 0) {
            Write-Host "  ‚úÖ [$permName] is EXPLICITLY ALLOWED"
        } elseif ($match.deny -gt 0) {
            Write-Host "  üö´ [$permName] is EXPLICITLY DENIED"
        } else {
            Write-Host "  ‚ö†Ô∏è [$permName] exists but not allowed or denied"
        }
    }
    elseif ($inheritedPermissions.ContainsKey($permName)) {
        $viaGroup = $inheritedPermissions[$permName]
        Write-Host "  üì• [$permName] is INHERITED via group [$viaGroup]"
    }
    else {
        Write-Host "  ‚ùå [$permName] is NOT SET and NOT INHERITED"
    }
}
